/*
 * This file is generated by jOOQ.
 */
package uk.ncl.giacomobergami.utils.database.jooq.tables.records;


import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

import uk.ncl.giacomobergami.utils.database.jooq.tables.Datacenterenergyconsumption;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DatacenterenergyconsumptionRecord extends UpdatableRecordImpl<DatacenterenergyconsumptionRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>public.datacenterenergyconsumption.unique_entry_id</code>.
     */
    public void setUniqueEntryId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for
     * <code>public.datacenterenergyconsumption.unique_entry_id</code>.
     */
    public Integer getUniqueEntryId() {
        return (Integer) get(0);
    }

    /**
     * Setter for
     * <code>public.datacenterenergyconsumption.hostenergyconsumed</code>.
     */
    public void setHostenergyconsumed(Double value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>public.datacenterenergyconsumption.hostenergyconsumed</code>.
     */
    public Double getHostenergyconsumed() {
        return (Double) get(1);
    }

    /**
     * Setter for
     * <code>public.datacenterenergyconsumption.switchenergyconsumed</code>.
     */
    public void setSwitchenergyconsumed(Double value) {
        set(2, value);
    }

    /**
     * Getter for
     * <code>public.datacenterenergyconsumption.switchenergyconsumed</code>.
     */
    public Double getSwitchenergyconsumed() {
        return (Double) get(2);
    }

    /**
     * Setter for
     * <code>public.datacenterenergyconsumption.totalenergyconsumed</code>.
     */
    public void setTotalenergyconsumed(Double value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>public.datacenterenergyconsumption.totalenergyconsumed</code>.
     */
    public Double getTotalenergyconsumed() {
        return (Double) get(3);
    }

    /**
     * Setter for <code>public.datacenterenergyconsumption.dcname</code>.
     */
    public void setDcname(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.datacenterenergyconsumption.dcname</code>.
     */
    public String getDcname() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.datacenterenergyconsumption.finishtime</code>.
     */
    public void setFinishtime(Double value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.datacenterenergyconsumption.finishtime</code>.
     */
    public Double getFinishtime() {
        return (Double) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DatacenterenergyconsumptionRecord
     */
    public DatacenterenergyconsumptionRecord() {
        super(Datacenterenergyconsumption.DATACENTERENERGYCONSUMPTION);
    }

    /**
     * Create a detached, initialised DatacenterenergyconsumptionRecord
     */
    public DatacenterenergyconsumptionRecord(Integer uniqueEntryId, Double hostenergyconsumed, Double switchenergyconsumed, Double totalenergyconsumed, String dcname, Double finishtime) {
        super(Datacenterenergyconsumption.DATACENTERENERGYCONSUMPTION);

        setUniqueEntryId(uniqueEntryId);
        setHostenergyconsumed(hostenergyconsumed);
        setSwitchenergyconsumed(switchenergyconsumed);
        setTotalenergyconsumed(totalenergyconsumed);
        setDcname(dcname);
        setFinishtime(finishtime);
        resetChangedOnNotNull();
    }
}
